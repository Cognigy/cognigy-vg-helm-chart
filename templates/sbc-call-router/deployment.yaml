apiVersion: apps/v1
kind: Deployment
metadata:
  name: sbc-call-router
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    app: sbc-call-router
spec:
  selector:
    matchLabels:
      app: sbc-call-router
  replicas: {{ .Values.sbcCallRouter.replicaCount }}
  template:
    metadata:
      labels:
        app: sbc-call-router 
      annotations:
        checksum/cognigy-env: {{ include (print $.Template.BasePath "/configurations/cognigy-env.yaml") $ | sha256sum }}
    spec:
      {{- include "image.pullSecrets" $ | nindent 6 }}
      {{- if .Values.sbcCallRouter.affinity }}
      affinity: {{- include "vg.common.tplvalues.render" (dict "value" .Values.sbcCallRouter.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.sbcCallRouter.nodeSelector }}
      nodeSelector: {{- include "vg.common.tplvalues.render" (dict "value" .Values.sbcCallRouter.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.sbcCallRouter.priorityClassName }}
      priorityClassName: {{ .Values.sbcCallRouter.priorityClassName }}
      {{- end }}
      {{- if .Values.sbcCallRouter.podSecurityContext }}
      securityContext: {{- include "vg.common.tplvalues.render" (dict "value" .Values.sbcCallRouter.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.sbcCallRouter.tolerations }}
      tolerations: {{- include "vg.common.tplvalues.render" (dict "value" .Values.sbcCallRouter.tolerations "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: sbc-call-router
          image: {{ include "vg.common.image.render" (dict "global" $.Values.global "image" .Values.sbcCallRouter.image) }}
          imagePullPolicy: {{ .Values.sbcCallRouter.imagePullPolicy }}
          resources: {{- toYaml .Values.sbcCallRouter.resources | nindent 12 }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
            - name: health
              containerPort: {{ .Values.health.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: {{ .Values.health.port }}
            failureThreshold: 3
            initialDelaySeconds: 90
            periodSeconds: 60
            timeoutSeconds: 10 
          startupProbe:
            httpGet:
              path: /health/startup
              port: {{ .Values.health.port }}
          env:
            - name: NODE_ENV
              value: {{ .Values.global.nodeEnv | quote }}
            - name: HTTP_PORT
              value: {{ .Values.sbcCallRouter.port | quote }}
            - name: JAMBONES_LOGLEVEL
              value: {{ .Values.sbcCallRouter.logLevel }}
            - name: K8S 
              value: {{ .Values.global.k8s | quote }}
            - name: K8S_SBC_INBOUND_SERVICE_NAME
              value: {{ .Values.sbcInbound.serviceName }}:{{ .Values.sbcInbound.ports.tcp }}
            - name: K8S_SBC_OUTBOUND_SERVICE_NAME
              value: {{ .Values.sbcOutbound.serviceName }}:{{ .Values.sbcOutbound.ports.tcp }}
            - name: TRACING_ENABLED
              value: {{ .Values.tracing.enabled | quote }}
            - name: TRACING_BASE_URL_WITH_PROTOCOL
              value: {{ .Values.tracing.baseUrl | quote }}      
            - name: TRACING_ERRORS_ENABLED
              value: {{ .Values.tracing.errorsEnabled | quote }}
            - name: TRACING_SAMPLE_RATE
              value: {{ .Values.tracing.sampleRate | quote }}
            - name: TRACING_EVENTS_SAMPLE_RATE
              value: {{ .Values.tracing.eventsSampleRate | quote }}
            - name: ENVIRONMENT
              value: {{ .Values.tracing.environment | quote }}
            - name: COGNIGY_AI_VERSION            
              value: {{ .Chart.Version | trunc 6 | quote }}
            {{- if .Values.sbcCallRouter.extraEnvVars }}
            {{- include "vg.common.tplvalues.render" (dict "value" .Values.sbcCallRouter.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: cognigy-env
  