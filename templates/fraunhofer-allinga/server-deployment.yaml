{{- if .Values.fraunhofer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fraunhofer-server
  namespace: {{ $.Release.Namespace | quote }}
spec:
  selector:
    matchLabels:
      app: fraunhofer-server
  replicas: {{ .Values.fraunhofer.server.replicas }}
  template:
    metadata:
      labels:
        app: fraunhofer-server
      annotations:
        checksum/cognigy-env: {{ include (print $.Template.BasePath "/configurations/cognigy-env.yaml") $ | sha256sum }}
    spec:
      {{- include "image.pullSecrets" $ | nindent 6 }}
      {{- if .Values.fraunhofer.server.affinity }}
      affinity: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.fraunhofer.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.fraunhofer.server.nodeSelector }}
      nodeSelector: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.fraunhofer.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.fraunhofer.priorityClassName }}
      priorityClassName: {{ .Values.fraunhofer.server.priorityClassName }}
      {{- end }}
      {{- if .Values.fraunhofer.server.podSecurityContext }}
      securityContext: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.fraunhofer.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.fraunhofer.server.tolerations }}
      tolerations: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.fraunhofer.tolerations "context" $) | nindent 8 }}
      {{- end }}
      restartPolicy: Always      
      containers:
        - name: fraunhofer-server
          image: {{ .Values.fraunhofer.server.image }}
          imagePullPolicy: {{ .Values.fraunhofer.server.imagePullPolicy }}
          resources: {{- toYaml .Values.fraunhofer.server.resources | nindent 12 }}
          ports:
            - name: fraunhofer-server
              containerPort: {{ .Values.fraunhofer.server.port }}
              hostPort: {{ .Values.fraunhofer.server.port }}
              protocol: TCP
          tty: true
          stdin: true
          envFrom:
            - configMapRef:
                name: cognigy-env
{{- end }}