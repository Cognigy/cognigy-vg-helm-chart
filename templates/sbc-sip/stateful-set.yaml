{{- if .Values.sbc.sip.useStatefulSet }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sbc-sip
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    app: sbc-sip
spec:
  selector:
    matchLabels:
      app: sbc-sip
  replicas: {{ .Values.sbc.sip.replicaCount }}
  serviceName: {{ .Values.sbc.sip.headlessServiceName }}
  template:
    metadata:
      labels:
        app: sbc-sip
      annotations:
        checksum/cognigy-env: {{ include (print $.Template.BasePath "/configurations/cognigy-env.yaml") $ | sha256sum }}
        checksum/sbc-sip: {{ include (print $.Template.BasePath "/sbc-sip/config-map.yaml") $ | sha256sum }}
    spec:
      {{- include "image.pullSecrets" $ | nindent 6 }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- if .Values.sbc.sip.affinity }}
      affinity: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.sbc.sip.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.sbc.sip.nodeSelector }}
      nodeSelector: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.sbc.sip.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.sbc.sip.priorityClassName }}
      priorityClassName: {{ .Values.sbc.sip.priorityClassName }}
      {{- end }}
      {{- if .Values.sbc.sip.podSecurityContext }}
      securityContext: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.sbc.sip.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.sbc.sip.tolerations }}
      tolerations: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.sbc.sip.tolerations "context" $) | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      initContainers:
        {{- if and (.Values.sbc.ec2EipAllocator.enabled) (eq .Values.cloud "aws") }}
        - image: {{ .Values.sbc.ec2EipAllocator.image }}
          name: ec2-eip-allocator
          env:
            - name: AWS_EIP_NODE_GROUP_ROLE
              value: {{ .Values.sbc.ec2EipAllocator.sipEipGroupRole }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: awsKeyId
                  name: {{ .Values.sbc.ec2EipAllocator.vgOperatorUser }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: awsSecretKey
                  name: {{ .Values.sbc.ec2EipAllocator.vgOperatorUser }}
        {{- end }}
        - image: kanisterio/mysql-sidecar:0.40.0
          name: db-create-wait
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: voicegateway-mysql-password
                  key: mysql-password
          command:
            - sh 
            - -c 
            - |
              until mysql -u {{ .Values.mysql.auth.username }} -D {{ .Values.mysql.database.name }} -h mysql -p${PASSWORD} --protocol=tcp -e "select count(*) from accounts";
              do 
                sleep 5
              done
      containers:
        - name: drachtio
          image: {{ .Values.drachtio.image }}
          imagePullPolicy: {{ .Values.drachtio.imagePullPolicy }}
          resources: {{- toYaml .Values.drachtio.resources | nindent 12 }}
          ports:
            - name: drachtio
              containerPort: {{ .Values.drachtio.port }}
              protocol: TCP
            - name: sip-udp
              containerPort: {{ .Values.sbc.sip.ports.udp }}
              protocol: UDP
            - name: sip-tcp
              containerPort: {{ .Values.sbc.sip.ports.tcp }}
              protocol: TCP            
          args: 
            - drachtio
            {{- if .Values.sbcInbound.featureServerSignalingTransportTcp }}
            - --contact
            - "sip:*:5062;transport=tcp"
            {{- end }}
            - --loglevel
            - {{ .Values.sbc.sip.logLevel }}
            - --cloud-deployment
            - --sofia-loglevel
            - {{ .Values.sbc.sip.sofiaLoglevel | quote }}
            - --homer
            - {{ .Values.heplifyServer.serviceName }}:{{ .Values.heplifyServer.ports.udp }}
            - --homer-id
            - {{ .Values.drachtio.homerId | quote }}
          {{- if .Values.apiBan.enabled }}
          {{- if eq .Values.cognigyEnv.FEATURE_REDIS_SENTINEL_MODE_ENABLED "true" }}
            - --blacklist-redis-sentinels
            - {{ printf "\"%s:%s\"" .Values.cognigyEnv.REDIS_SENTINEL_HOST .Values.cognigyEnv.REDIS_SENTINEL_PORT }}
            - --blacklist-redis-master
            - {{ .Values.cognigyEnv.REDIS_SENTINEL_MASTER_NAME | quote }}
          {{- else }}
            - --blacklist-redis-address
            - {{ .Values.redis.host | quote }}
            - --blacklist-redis-port
            - {{ .Values.redis.port | quote }}
          {{- end }}
            - --blacklist-refresh-secs
            - {{ .Values.apiBan.refreshInterval | quote }}
            - --blacklist-redis-key
            - {{ .Values.apiBan.redisSetKey | quote }}
          {{- end }}
          env:
            - name: NODE_ENV
              value: {{ .Values.global.nodeEnv | quote }}
            - name: CLOUD 
              value: {{ .Values.cloud | quote }}
            {{- if eq .Values.cloud "aws" }}
            - name: IMDSv2
              value: {{ .Values.aws.useIMDSv2 | quote }}
            {{- end }}
            {{- if and (eq .Values.cloud "azure") (.Values.azure.useLoadBalancerIMDS) }}
            - name: LB_IMDS
              value: {{ .Values.azure.useLoadBalancerIMDS | quote }}
            {{- end }}
            - name: DRACHTIO_SECRET
              valueFrom:
                secretKeyRef:
                  name: voicegateway-drachtio-secret
                  key: secret
            - name: DRACHTIO_TLS_CERT_FILE
              value: /etc/letsencrypt/tls.crt
            - name: DRACHTIO_TLS_KEY_FILE
              value: /etc/letsencrypt/tls.key
            - name: DRACHTIO_TLS_CHAIN_FILE
              value: /etc/letsencrypt/tls.crt
            - name: TLS_PORT
              value: {{ .Values.sbc.sip.ports.tls | quote }}
            - name: WSS_PORT
              value: {{ .Values.sbc.sip.ports.wss | quote }}
            - name: SOFIA_SEARCH_DOMAINS
              value: "1"
            - name: SOFIA_SRES_NO_CACHE
              value: "1"
            - name: DRACHTIO_SUPPORT_BEST_EFFORT_TLS
              value: {{ if .Values.drachtio.supportBestEffortTls }}{{ print 1 | quote }}{{ else }}{{ print 0 | quote }}{{ end }}              
          volumeMounts:
            - mountPath: /etc/letsencrypt/
              name: drachtio-certs
            - mountPath: /etc/drachtio.conf.xml
              name: sbc-sip-config
              subPath: drachtio.conf.xml
        - name: sbc-sip-sidecar
          image: {{ .Values.sbcSipSidecar.image }}
          imagePullPolicy: {{ .Values.sbcSipSidecar.imagePullPolicy }}
          resources: {{- toYaml .Values.sbcSipSidecar.resources | nindent 12 }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
            - name: health
              containerPort: {{ .Values.health.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: {{ .Values.health.port }}
            failureThreshold: 3
            initialDelaySeconds: 90
            periodSeconds: 60
            timeoutSeconds: 10 
          startupProbe:
            httpGet:
              path: /health/startup
              port: {{ .Values.health.port }}
          env:
            - name: K8S 
              value: {{ .Values.global.k8s | quote }}
            - name: NODE_ENV
              value: {{ .Values.global.nodeEnv | quote }}
            - name: DRACHTIO_HOST
              value: 127.0.0.1
            - name: DRACHTIO_PORT 
              value: {{ .Values.drachtio.port | quote }}
            - name: DRACHTIO_SECRET
              valueFrom:
                secretKeyRef:
                  name: voicegateway-drachtio-secret
                  key: secret
            - name: ENABLE_METRICS
              value: {{ if .Values.stats.enabled }}{{ print 1 | quote }}{{ else }}{{ print 0 | quote }}{{ end }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: voicegateway-jwt
                  key: jwt
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STATS_TAGS
              value: "pod:$(K8S_POD_NAME)"
            - name: STATS_PROTOCOL
              value: {{ .Values.stats.protocol }}
            - name: STATS_TELEGRAF
              value: {{ if .Values.stats.telegraf }}{{ print 1 | quote }}{{ else }}{{ print 0 | quote }}{{ end }}
            - name: STATS_HOST
              value: {{ .Values.telegraf.serviceName }}
            - name: STATS_PORT
              value: {{ .Values.telegraf.port  | quote }}
            - name: STATS_SAMPLE_RATE
              value:  {{ .Values.stats.sampleRate | quote }}
            - name: JAMBONES_LOGLEVEL
              value: {{ .Values.sbcSipSidecar.logLevel }}
            - name: JAMBONES_MYSQL_HOST
              value: {{ .Values.mysql.host }}
            - name: JAMBONES_MYSQL_DATABASE
              value: {{ .Values.mysql.database.name | quote }}
            - name: JAMBONES_MYSQL_USER
              value: {{ .Values.mysql.auth.username | quote }}
            - name: JAMBONES_MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: voicegateway-mysql-password
                  key: mysql-password
            - name: JAMBONES_REDIS_HOST
              value: {{ .Values.redis.host }}
            - name: JAMBONES_REDIS_PORT
              value: {{ .Values.redis.port | quote }}
            - name: JAMBONES_REGBOT_CONTACT_USE_IP
              value: "1"
            - name: JAMBONES_TIME_SERIES_HOST
              value: {{ .Values.influxdb.host }}
            - name: TRACING_ENABLED
              value: {{ .Values.tracing.enabled | quote }}
            - name: TRACING_BASE_URL_WITH_PROTOCOL
              value: {{ .Values.tracing.baseUrl | quote }}      
            - name: TRACING_ERRORS_ENABLED
              value: {{ .Values.tracing.errorsEnabled | quote }}
            - name: TRACING_SAMPLE_RATE
              value: {{ .Values.tracing.sampleRate | quote }}
            - name: TRACING_EVENTS_SAMPLE_RATE
              value: {{ .Values.tracing.eventsSampleRate | quote }}
            - name: ENVIRONMENT
              value: {{ .Values.tracing.environment | quote }}
            - name: COGNIGY_AI_VERSION
              value: {{ .Chart.Version | trunc 6 | quote }}
          envFrom:
            - configMapRef:
                name: cognigy-env
      volumes:
      - name: drachtio-certs
        secret:
          secretName: cognigy-traefik
          items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
          defaultMode: 420
      - name: sbc-sip-config
        configMap:
          name: sbc-sip
          items:
          - key: drachtio.conf.xml
            path: drachtio.conf.xml
{{- end }}