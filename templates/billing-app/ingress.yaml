{{- if and (.Values.billingApp.enabled) (.Values.ingress.enabled) }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: billing-app
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
  {{- if eq .Values.ingress.ingressClassName "traefik" }}
    {{- if .Values.tls.enabled }}
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    {{- else }}
    traefik.ingress.kubernetes.io/router.entrypoints: web
    {{- end }}
    {{- if .Values.ingress.billingApp.ipWhiteListMiddleware.enabled }}
    traefik.ingress.kubernetes.io/router.middlewares: {{ $.Release.Namespace }}-ipwhitelistbillingapp@kubernetescrd
    {{- end }}
  {{- end }}
  {{- if .Values.ingress.billingApp.extraAnnotations }}
    {{- include "vg.common.tplvalues.render" (dict "value" .Values.ingress.billingApp.extraAnnotations "context" $) | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  {{- include "vg.tlsCertificate.secretName.render" $ | nindent 2 }}
  rules:
    - host: {{ .Values.ingress.billingApp.host }}
      http:
        paths:
          - backend:
              service:
                name: billing-app
                port:
                  number: {{ .Values.billingApp.port }}
            path: /
            pathType: Prefix
{{- end }}