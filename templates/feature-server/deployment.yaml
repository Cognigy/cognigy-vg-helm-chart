apiVersion: apps/v1
kind: {{ if .Values.featureServer.useStatefulSet }}StatefulSet{{- else }}Deployment{{- end }}
metadata:
  name: feature-server
  namespace: {{ $.Release.Namespace | quote }}
spec:
  selector:
    matchLabels:
      app: feature-server
  replicas: {{ .Values.featureServer.replicaCount }}
  {{- if .Values.featureServer.useStatefulSet }}
  serviceName: feature-server-headless
  {{- end }}
  template:
    metadata:
      labels:
        app: feature-server
    spec:
    {{- include "image.pullSecrets" $ | nindent 6 }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 900
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: feature-server
      initContainers:
        - image: kanisterio/mysql-sidecar:0.40.0
          name: db-create-wait
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: voicegateway-mysql-password
                  key: mysql-password
          command:
            - sh 
            - -c 
            - |
              until mysql -u {{ .Values.mysql.auth.username }} -D {{ .Values.mysql.database.name }} -h mysql -p${PASSWORD} --protocol=tcp -e "select count(*) from accounts";
              do 
                sleep 5
              done
      containers:
        - name: drachtio
          image: {{ .Values.drachtio.image }}
          imagePullPolicy: {{ .Values.drachtio.imagePullPolicy }}
          resources: {{- toYaml .Values.api.resources | nindent 12 }}
          ports:
            - name: drachtio
              containerPort: {{ .Values.drachtio.port }}
              protocol: TCP
          env: 
            - name: CLOUD 
              value: {{ .Values.cloud | quote }}
            {{- if eq .Values.cloud "aws" }}
            - name: IMDSv2
              value: {{ .Values.aws.useIMDSv2 | quote }}
            {{- end }}
            {{- if and (eq .Values.cloud "azure") (.Values.azure.useLoadBalancerIMDS) }}
            - name: LB_IMDS
              value: {{ .Values.azure.useLoadBalancerIMDS | quote }}
            {{- end }}
            - name: DRACHTIO_SECRET
              valueFrom:
                secretKeyRef:
                  name: voicegateway-drachtio-secret
                  key: secret
            - name: SOFIA_SEARCH_DOMAINS
              value: "1"
            - name: SOFIA_SRES_NO_CACHE
              value: "1"
          lifecycle:
            preStop:
              exec:
                command: [
                  "/bin/sh",
                  "-c",
                  "while $(curl --output /dev/null --silent --head --fail-early http://127.0.0.1:3000); do printf '.'; sleep 10; done"
                ]
          {{- if .Values.sbcInbound.featureServerSignalingTransportTcp }}
          args: ['drachtio', '--contact', 'sip:*:5060;transport=udp,tcp', '--loglevel', 'info', 'sofia-loglevel', '3']
          {{- else }}
          args: ['drachtio', '--contact', 'sip:*:5060;transport=udp', '--mtu', '4096', '--loglevel', 'info', 'sofia-loglevel', '3']          
          {{- end }}
        - name: freeswitch
          image: {{ .Values.freeswitch.image }}
          imagePullPolicy: {{ .Values.freeswitch.imagePullPolicy }}
          resources: {{- toYaml .Values.freeswitch.resources | nindent 12 }}
          ports:
            - name: freeswitch
              containerPort: {{ .Values.freeswitch.port }}
              protocol: TCP
          args:
          {{- range .Values.freeswitch.args }}
            - {{ . }}
          {{- end }}
          env: 
            - name: MOD_AUDIO_FORK_SUBPROTOCOL_NAME
              value: audio.jambonz.org
            - name: MOD_AUDIO_FORK_SERVICE_THREADS
              value: "1"
            - name: MOD_AUDIO_FORK_BUFFER_SECS
              value: "3"
          lifecycle:
            preStop:
              exec:
                command: [
                  "/bin/sh",
                  "-c",
                  "while $(curl --output /dev/null --silent --head --fail-early http://127.0.0.1:3000); do printf '.'; sleep 10; done"
                ]
          volumeMounts:
            - mountPath: /tmp 
              name: temp-audio-volume
        - name: feature-server 
          image: {{ .Values.featureServer.image }}
          imagePullPolicy: {{ .Values.featureServer.imagePullPolicy }}
          resources: {{- toYaml .Values.featureServer.resources | nindent 12 }}
          ports:
            - name: feature-server
              containerPort: {{ .Values.featureServer.ports.tcp }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.featureServer.ports.tcp }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "/opt/app/bin/k8s-pre-stop-hook.js"]
          volumeMounts:
            - mountPath: /tmp 
              name: temp-audio-volume
            - mountPath: /etc/voicemail-phraselist.json
              name: voicemail-phraselist
              subPath:  voicemail-phraselist.json
          env:
            - name: NODE_ENV
              value: {{ .Values.global.nodeEnv | quote }}
            - name: HTTP_PORT
              value: {{ .Values.featureServer.ports.tcp | quote }}
            - name: K8S 
              value: {{ .Values.global.k8s | quote }}
            - name: K8S_SBC_SIP_SERVICE_NAME 
              value: {{ .Values.sbc.sip.serviceName }}
            - name: JAMBONZ_GATHER_EARLY_HINTS_MATCH
              value: "true"
            - name: JAMBONES_INJECT_CONTENT
              value: "true"
            - name: JAMBONZ_CLEANUP_INTERVAL_MINS
              value: "60"
            - name: JAMBONES_API_BASE_URL
              value: {{ .Values.ingress.api.host }}/v1
            - name: JAMBONES_FREESWITCH
              value: {{ .Values.featureServer.freeswitchConnection | quote }}
            - name: ENABLE_METRICS
              value: {{ .Values.stats.enabled  | quote }}
            - name: STATS_PROTOCOL
              value: {{ .Values.stats.protocol }}
            - name: STATS_TELEGRAF
              value: {{ .Values.stats.telegraf | quote }}
            - name: STATS_HOST
              value: {{ .Values.telegraf.serviceName }}
            - name: STATS_PORT
              value: {{ .Values.telegraf.port  | quote }}
            - name: STATS_SAMPLE_RATE
              value:  {{ .Values.stats.sampleRate | quote }}
            - name: DRACHTIO_HOST
              value: {{ .Values.global.localhost }}
            - name: DRACHTIO_PORT 
              value: {{ .Values.drachtio.port | quote }}
            - name: DRACHTIO_SECRET
              valueFrom:
                secretKeyRef:
                  name: voicegateway-drachtio-secret
                  key: secret
            - name: JAMBONES_LOGLEVEL
              value: {{ .Values.featureServer.logLevel }}
            - name: JAMBONES_MYSQL_HOST
              value: {{ .Values.mysql.host }}
            - name: JAMBONES_MYSQL_DATABASE
              value: {{ .Values.mysql.database.name | quote }}
            - name: JAMBONES_MYSQL_USER
              value: {{ .Values.mysql.auth.username | quote }}
            - name: JAMBONES_MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: voicegateway-mysql-password
                  key: mysql-password
            - name: JAMBONES_REDIS_HOST
              value: {{ .Values.redis.host }}
            - name: JAMBONES_REDIS_PORT
              value: {{ .Values.redis.port | quote }}
            - name: JAMBONES_TIME_SERIES_HOST
              value: {{ .Values.influxdb.host }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: voicegateway-jwt
                  key: jwt
            - name: VMD_HINTS_FILE
              value: /etc/voicemail-phraselist.json
            - name: JAMBONES_OTEL_ENABLED
              value: "1" 
            - name: OTEL_EXPORTER_JAEGER_AGENT_HOST
              value: jaeger
            - name: OTEL_TRACES_SAMPLER
              value: parentbased_traceidratio
            - name: OTEL_TRACES_SAMPLER_ARG
              value: {{ default "1.0" .Values.featureServer.otelSampleRate | quote }}
            - name: TRACING_ENABLED              
              value: {{ .Values.tracing.enabled | quote }}
            - name: TRACING_BASE_URL_WITH_PROTOCOL
              value: {{ .Values.tracing.baseUrl | quote }}      
            - name: TRACING_ERRORS_ENABLED
              value: {{ .Values.tracing.errorsEnabled | quote }}                  
            - name: TRACING_EVENTS_SAMPLE_RATE            
              value: {{ .Values.tracing.eventsSampleRate | quote }}
            - name: COGNIGY_VG_COLLECT_ANALYTICS_DATA
              value: {{ .Values.cognigyInsights.enabled | quote }}
            - name: COGNIGY_SEND_INTERACTION_PANEL_ANALYTICS
              value: {{ .Values.cognigyInsights.collectInteractionPanelCalls | quote }}
            {{- if and (.Values.cognigyInsights.enabled) (.Values.cognigyInsights.apiUrl) }}
            - name: COGNIGY_INSIGHTS_SERVICE_COLLECTOR_URL_WITH_PROTOCOL
              value: {{ .Values.cognigyInsights.apiUrl | quote }}
            {{- end }}
            {{- if and (.Values.cognigyInsights.enabled) (.Values.cognigyInsights.apiUrlApp) }}
            - name: COGNIGY_INSIGHTS_SERVICE_COLLECTOR_URL_WITH_PROTOCOL_APP
              value: {{ .Values.cognigyInsights.apiUrlApp | quote }}
            {{- end }}
            {{- if and (.Values.cognigyInsights.enabled) (.Values.cognigyInsights.apiUrlDev) }}
            - name: COGNIGY_INSIGHTS_SERVICE_COLLECTOR_URL_WITH_PROTOCOL_DEV
              value: {{ .Values.cognigyInsights.apiUrlDev | quote }}
            {{- end }}
            {{- if and (.Values.cognigyInsights.enabled) (.Values.cognigyInsights.apiUrlStaging) }}
            - name: COGNIGY_INSIGHTS_SERVICE_COLLECTOR_URL_WITH_PROTOCOL_STAGING
              value: {{ .Values.cognigyInsights.apiUrlStaging | quote }}
            {{- end }}
            {{- if and (.Values.cognigyInsights.enabled) (.Values.cognigyInsights.apiUrlTrial) }}
            - name: COGNIGY_INSIGHTS_SERVICE_COLLECTOR_URL_WITH_PROTOCOL_TRIAL
              value: {{ .Values.cognigyInsights.apiUrlTrial | quote }}
            {{- end }}
            {{- if and (.Values.cognigyInsights.apiKey.secret) (.Values.cognigyInsights.apiKey.secretKey) }}
            - name: COGNIGY_INSIGHTS_SERVICE_COLLECTOR_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cognigyInsights.apiKey.secret | quote }}
                  key: {{ .Values.cognigyInsights.apiKey.secretKey | quote }}
            {{- end }}
            {{- if and (.Values.cognigyInsights.apiKeyApp.secret) (.Values.cognigyInsights.apiKeyApp.secretKey) }}
            - name: COGNIGY_INSIGHTS_SERVICE_COLLECTOR_API_KEY_APP
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cognigyInsights.apiKeyApp.secret | quote }}
                  key: {{ .Values.cognigyInsights.apiKeyApp.secretKey | quote }}
            {{- end }}
            {{- if and (.Values.cognigyInsights.apiKeyDev.secret) (.Values.cognigyInsights.apiKeyDev.secretKey) }}
            - name: COGNIGY_INSIGHTS_SERVICE_COLLECTOR_API_KEY_DEV
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cognigyInsights.apiKeyDev.secret | quote }}
                  key: {{ .Values.cognigyInsights.apiKeyDev.secretKey | quote }}
            {{- end }}
            {{- if and (.Values.cognigyInsights.apiKeyStaging.secret) (.Values.cognigyInsights.apiKeyStaging.secretKey) }}
            - name: COGNIGY_INSIGHTS_SERVICE_COLLECTOR_API_KEY_STAGING
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cognigyInsights.apiKeyStaging.secret | quote }}
                  key: {{ .Values.cognigyInsights.apiKeyStaging.secretKey | quote }}
            {{- end }}
            {{- if and (.Values.cognigyInsights.apiKeyTrial.secret) (.Values.cognigyInsights.apiKeyTrial.secretKey) }}
            - name: COGNIGY_INSIGHTS_SERVICE_COLLECTOR_API_KEY_TRIAL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cognigyInsights.apiKeyTrial.secret | quote }}
                  key: {{ .Values.cognigyInsights.apiKeyTrial.secretKey | quote }}
            {{- end }}
            {{- if and (.Values.cognigyJwtSecrets.secret) (.Values.cognigyJwtSecrets.secretKey) }}
            - name: COGNIGY_AI_JWT_SECRETS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cognigyJwtSecrets.secret | quote }}
                  key: {{ .Values.cognigyJwtSecrets.secretKey | quote }}
            {{- end }}
      volumes:
        - name: temp-audio-volume
          emptyDir: {}
        - name: voicemail-phraselist
          configMap:
            name: voicemail-phraselist
            items:
              - key: voicemail-phraselist.json
                path: voicemail-phraselist.json
