apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: heplify-server
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    app: heplify-server
spec:
  serviceName: heplify-server
  replicas: {{ .Values.heplifyServer.replicaCount }}
  selector:
    matchLabels:
      app: heplify-server
  template:
    metadata:
      labels:
        app: heplify-server
      annotations:
        checksum/heplify-server: {{ include (print $.Template.BasePath "/heplify-server/config-map.yaml") $ | sha256sum }}
    spec:
      {{- include "image.pullSecrets" $ | nindent 6 }}
      {{- if .Values.heplifyServer.affinity }}
      affinity: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.heplifyServer.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.heplifyServer.nodeSelector }}
      nodeSelector: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.heplifyServer.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.heplifyServer.priorityClassName }}
      priorityClassName: {{ .Values.heplifyServer.priorityClassName }}
      {{- end }}
      {{- if .Values.heplifyServer.podSecurityContext }}
      securityContext: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.heplifyServer.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.heplifyServer.tolerations }}
      tolerations: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.heplifyServer.tolerations "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: heplify-server
          image: {{ .Values.heplifyServer.image }}
          imagePullPolicy: {{ .Values.heplifyServer.imagePullPolicy }}
          resources: {{- toYaml .Values.heplifyServer.resources | nindent 12 }}
          ports:
            - name: heplify-server
              containerPort: {{ .Values.heplifyServer.ports.udp }}
              protocol: UDP
            - name: stats-scraper
              containerPort: {{ .Values.heplifyServer.ports.tcp }}
              protocol: TCP  
          env:
            - name: HEPLIFYSERVER_DBUSER
              value: {{ .Values.postgresql.auth.postgresUsername | quote }}
            - name: HEPLIFYSERVER_DBPASS
              value: {{ .Values.postgresql.auth.postgresPassword | quote }}          
          args: ['./heplify-server', '-config', '/etc/heplify-server.toml']
          volumeMounts:
            - name: heplify-server-config
              mountPath: /etc/heplify-server.toml
              subPath: heplify-server.toml
      volumes:
      - name: heplify-server-config
        configMap:
          name: heplify-server
          items:
          - key: heplify-server.toml
            path: heplify-server.toml
