{{- if .Values.vgConnector.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vg-connector
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    app: vg-connector
spec:
  selector:
    matchLabels:
      app: vg-connector
  replicas: {{ .Values.vgConnector.replicaCount }}
  template:
    metadata:
      labels:
        app: vg-connector
      annotations:
        checksum/cognigy-env: {{ include (print $.Template.BasePath "/configurations/cognigy-env.yaml") $ | sha256sum }}
    spec:
      {{- include "image.pullSecrets" $ | nindent 6 }}
      {{- if .Values.vgConnector.affinity }}
      affinity: {{- include "vg.common.tplvalues.render" (dict "value" .Values.vgConnector.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.vgConnector.nodeSelector }}
      nodeSelector: {{- include "vg.common.tplvalues.render" (dict "value" .Values.vgConnector.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.vgConnector.priorityClassName }}
      priorityClassName: {{ .Values.vgConnector.priorityClassName }}
      {{- end }}
      {{- if .Values.vgConnector.podSecurityContext }}
      securityContext: {{- include "vg.common.tplvalues.render" (dict "value" .Values.vgConnector.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.vgConnector.tolerations }}
      tolerations: {{- include "vg.common.tplvalues.render" (dict "value" .Values.vgConnector.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.vgConnector.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.vgConnector.terminationGracePeriodSeconds }}
      {{- end }}
      restartPolicy: Always
      containers:
        - name: vg-connector
          image: {{ include "vg.common.image.render" (dict "global" $.Values.global "image" .Values.vgConnector.image) }}
          imagePullPolicy: {{ .Values.vgConnector.imagePullPolicy }}
          resources: {{- toYaml .Values.vgConnector.resources | nindent 12 }}
          ports:
            - name: health
              containerPort: {{ .Values.health.port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: {{ .Values.health.port }}
            failureThreshold: 3
            initialDelaySeconds: 90
            periodSeconds: 60
            timeoutSeconds: 10
          startupProbe:
            httpGet:
              path: /health/startup
              port: {{ .Values.health.port }}
          env:
            - name: COGNIGY_AI_VERSION
              value: {{ regexFind "^[0-9]+\\.[0-9]+\\.[0-9]+" .Chart.Version | quote }}
            - name: ENVIRONMENT
              value: {{ .Values.tracing.environment | quote }}
            - name: JAMBONES_MYSQL_DATABASE
              value: {{ .Values.mysql.database.name | quote }}
            - name: JAMBONES_MYSQL_HOST
              value: {{ .Values.mysql.host }}
            - name: JAMBONES_MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: voicegateway-mysql-password
                  key: mysql-password
            - name: JAMBONES_MYSQL_USER
              value: {{ .Values.mysql.auth.username | quote }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: voicegateway-jwt
                  key: jwt
            {{- if hasKey .Values.vgConnector "modules" }}
            {{- if hasKey .Values.vgConnector.modules "webrtc" }}
            - name: FEATURE_ENABLE_WEBRTC
              value: {{ .Values.vgConnector.modules.webrtc.enabled | quote }}
            {{- end }}
            {{- if hasKey .Values.vgConnector.modules "msTeams" }}
            - name: FEATURE_ENABLE_MSTEAMS
              value: {{ .Values.vgConnector.modules.msTeams.enabled | quote }}
            {{- if eq (.Values.vgConnector.modules.msTeams.enabled | toString) "true" }}
            - name: ACS_CALLBACK_URI
              value: {{ .Values.vgConnector.modules.msTeams.acsCallbackUri | quote }}
            - name: ACS_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: vg-msteams-connection-string
                  key: connection-string
            - name: FEATURE_MSTEAMS_RECORD_AUDIO
              value: {{ default "false" .Values.vgConnector.modules.msTeams.recordAudio | quote }}
            {{- end }}
            {{- end }}
            {{- end }}
            - name: NODE_ENV
              value: {{ .Values.global.nodeEnv | quote }}
            - name: PORT
              value: {{ .Values.vgConnector.port | quote }}
            - name: SIP_BASE_URL
              value: {{ .Values.sbc.sip.uri | quote }}
            {{- if .Values.vgConnector.extraEnvVars }}
            {{- include "vg.common.tplvalues.render" (dict "value" .Values.vgConnector.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: cognigy-env
{{- end }}
