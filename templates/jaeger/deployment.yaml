{{- if not (.Values.tracing.callTracingEnabled) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jaeger
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    app: jaeger
spec:
  serviceName: jaeger
  replicas: {{ .Values.jaeger.replicaCount }}
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
    spec:
      {{- include "image.pullSecrets" $ | nindent 6 }}
      {{- if .Values.jaeger.affinity }}
      affinity: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.jaeger.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.jaeger.nodeSelector }}
      nodeSelector: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.jaeger.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.jaeger.priorityClassName }}
      priorityClassName: {{ .Values.jaeger.priorityClassName }}
      {{- end }}
      {{- if .Values.jaeger.podSecurityContext }}
      securityContext: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.jaeger.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.jaeger.tolerations }}
      tolerations: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.jaeger.tolerations "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: jaeger
          image: {{ .Values.jaeger.image }}
          imagePullPolicy: {{ .Values.jaeger.imagePullPolicy }}
          resources: {}
          ports:
            - name: collector
              containerPort: {{ .Values.jaeger.ports.udp.collector }}
              protocol: UDP
            - name: compact
              containerPort: {{ .Values.jaeger.ports.udp.compact }}
              protocol: UDP
            - name: ui
              containerPort: {{ .Values.jaeger.ports.tcp }}
              protocol: TCP
{{- end }}
