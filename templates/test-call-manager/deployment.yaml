{{- if .Values.testCallManager.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-call-manager
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    owner-team: echo
spec:
  selector:
    matchLabels:
      app: test-call-manager
  replicas: {{ .Values.testCallManager.replicaCount }}
  template:
    metadata:
      labels:
        app: test-call-manager
      annotations:
        checksum/cognigy-env: {{ include (print $.Template.BasePath "/configurations/cognigy-env.yaml") $ | sha256sum }}
    spec:
      {{- include "image.pullSecrets" $ | nindent 6 }}
      {{- if .Values.testCallManager.affinity }}
      affinity: {{- include "vg.common.tplvalues.render" (dict "value" .Values.testCallManager.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.testCallManager.nodeSelector }}
      nodeSelector: {{- include "vg.common.tplvalues.render" (dict "value" .Values.testCallManager.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.testCallManager.priorityClassName }}
      priorityClassName: {{ .Values.testCallManager.priorityClassName }}
      {{- end }}
      {{- if .Values.testCallManager.podSecurityContext }}
      securityContext: {{- include "vg.common.tplvalues.render" (dict "value" .Values.testCallManager.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.testCallManager.tolerations }}
      tolerations: {{- include "vg.common.tplvalues.render" (dict "value" .Values.testCallManager.tolerations "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: test-call-manager
          image: {{ include "vg.common.image.render" (dict "global" $.Values.global "image" .Values.testCallManager.image) }}
          imagePullPolicy: {{ .Values.testCallManager.imagePullPolicy }}
          resources: {{- toYaml .Values.testCallManager.resources | nindent 12 }}
          ports:
            - name: call-manager
              containerPort: {{ .Values.testCallManager.port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
            - name: health
              containerPort: {{ .Values.health.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: {{ .Values.health.port }}
            failureThreshold: 3
            initialDelaySeconds: 90
            periodSeconds: 60
            timeoutSeconds: 10 
          startupProbe:
            httpGet:
              path: /health/startup
              port: {{ .Values.health.port }}
          env:
            - name: NODE_ENV
              value: {{ .Values.global.nodeEnv | quote }}
            - name: PORT
              value: {{ .Values.testCallManager.port | quote }}
            - name: VOICE_TEST_CALL_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: test-call-manager-api-secret
                  key: secret
            - name: CLEAN_UP_THRESHOLD_TIME_GARBAGE_COLLECTION
              value: {{ .Values.testCallManager.cleanUpThreshold.garbageCollection | quote }}
            - name: CLEAN_UP_THRESHOLD_TIME_RECENT_CALLS
              value: {{ .Values.testCallManager.cleanUpThreshold.recentCalls | quote }}
            - name: AUTH_ENDPOINT
              {{- if and (.Values.testCallManager.authEndpointProtocol) (.Values.ingress.testCallManager.host) (.Values.testCallManager.authEndpointPath) }}
              value: {{ printf "%s://%s%s" .Values.testCallManager.authEndpointProtocol .Values.ingress.testCallManager.host .Values.testCallManager.authEndpointPath | quote }}
              {{- else }}
              value: {{ .Values.testCallManager.authEndpoint }}
              {{- end }}
            - name: REDIS_HOST
              value: {{ .Values.redis.host }}
            - name: REDIS_PORT
              value: {{ .Values.redis.port | quote }}
            - name: VG_ENDPOINT
              value: {{ .Values.api.protocol }}://{{ .Values.ingress.api.host }}/v1
            - name: VG_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{- include "interactionPanelServiceProvider" $ | indent 1 }}
                  key: apiKey
            - name: VG_TEST_CALL_MANAGER_SERVICE_PROVIDER_ID
              valueFrom:
                secretKeyRef:
                  name: {{- include "interactionPanelServiceProvider" $ | indent 1 }}
                  key: id
            - name: TRACING_ENABLED
              value: {{ .Values.tracing.enabled | quote }}
            - name: TRACING_BASE_URL_WITH_PROTOCOL
              value: {{ .Values.tracing.baseUrl | quote }}      
            - name: TRACING_ERRORS_ENABLED
              value: {{ .Values.tracing.errorsEnabled | quote }}
            - name: TRACING_SAMPLE_RATE
              value: {{ .Values.tracing.sampleRate | quote }}
            - name: TRACING_EVENTS_SAMPLE_RATE
              value: {{ .Values.tracing.eventsSampleRate | quote }}
            - name: ENVIRONMENT
              value: {{ .Values.tracing.environment | quote }}
            - name: COGNIGY_AI_VERSION
              value: {{ regexFind "^[0-9]+\\.[0-9]+\\.[0-9]+" .Chart.Version | quote }}
            {{- if .Values.testCallManager.extraEnvVars }}
            {{- include "vg.common.tplvalues.render" (dict "value" .Values.testCallManager.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: cognigy-env
{{- end }}
