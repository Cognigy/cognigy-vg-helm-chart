apiVersion: apps/v1
kind: Deployment
metadata:
  name: homer
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    app: homer
spec:
  replicas: {{ .Values.homer.replicaCount }}
  selector:
    matchLabels:
      app: homer
  template:
    metadata:
      labels:
        app: homer
      annotations:
        checksum/homer: {{ include (print $.Template.BasePath "/homer/config-map.yaml") $ | sha256sum }}
    spec:
      {{- include "image.pullSecrets" $ | nindent 6 }}
      {{- if .Values.homer.affinity }}
      affinity: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.homer.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.homer.nodeSelector }}
      nodeSelector: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.homer.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.homer.priorityClassName }}
      priorityClassName: {{ .Values.homer.priorityClassName }}
      {{- end }}
      {{- if .Values.homer.podSecurityContext }}
      securityContext: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.homer.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.homer.tolerations }}
      tolerations: {{- include "cognigyvg.common.tplvalues.render" (dict "value" .Values.homer.tolerations "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: homer
          image: {{ .Values.homer.image }}
          imagePullPolicy: {{ .Values.homer.imagePullPolicy }}
          resources: {{- toYaml .Values.homer.resources | nindent 12 }}
          ports:
            - name: homer
              containerPort: {{ .Values.homer.port }}
              protocol: TCP
          env:
            - name: DB_HOST
              value: {{ .Values.postgresql.host }}
            - name: DB_USER
              value: {{ .Values.postgresql.auth.postgresUsername | quote }}
            - name: DB_PASS
              value: {{ .Values.postgresql.auth.postgresPassword | quote }}
          volumeMounts:
            - name: homer-config
              mountPath: /usr/local/homer/etc/webapp_config.json
              subPath: webapp_config.json
            - name: homer-config
              mountPath: /homer-semaphore/.bootstrapped
              subPath: bootstrapped
      volumes:
      - name: homer-config
        configMap:
          name: homer
          items:
          - key: webapp_config.json
            path: webapp_config.json          
          - key: bootstrapped
            path: bootstrapped